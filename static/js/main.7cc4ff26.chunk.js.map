{"version":3,"sources":["components/SimpleTable/index.js","components/Graph/index.js","App.js","serviceWorker.js","index.js"],"names":["CustomTableCell","withStyles","theme","head","backgroundColor","color","palette","common","white","body","fontSize","TableCell","SimpleTable","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","data","rows","objects","i","length","name","Name","major","Major","interest","Interest","degree","Degree","average","Average","id","createData","classes","react_default","a","createElement","Paper_default","className","root","Table_default","table","TableHead_default","TableRow_default","align","TableBody_default","map","row","key","TableCell_default","makeTable","React","Component","width","overflowX","&:nth-of-type(odd)","background","default","minWidth","Graph","_this","drawChart","bind","assertThisInitialized","addPerson","removePerson","state","selectedpersons","_ref","updateChart","dataset","nodes","d3","sum","d","Count","bubble","size","padding","node","descendants","filter","children","transition","attr","x","y","select","r","duration","text","pers","setState","concat","toConsumableArray","filteredArray","e","this2","svg","append","on","transform","selectAll","enter","style","Color","split","join","components_SimpleTable","App","handleAddClick","originaldata","height","skill","element","buttons","document","getElementsByClassName","j","getElementById","target","feed","entry","gsx$whatisyourfirstandlastname","$t","parseFloat","gsx$whatisyourmajor","gsx$interest","gsx$whatdegreeareyoupursuing","gsx$average","gsx$color","fetch","preFix","then","result","json","undefined","_this2","onClick","components_Graph","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7cc4ff26.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    overflowX: 'auto',\n  },\n  row: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    }\n  }\n  ,\n  table: {\n    minWidth: 700,\n  },\n});\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: \"#0098fb\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 20,\n  },\n}))(TableCell);\n\nfunction createData(data) {\n  var objects = [];\n  if (data !== \"no\"){\n    for (var i = 0; i < data.data.length; i++) {\n      var name = data.data[i].Name;\n      var major = data.data[i].Major;\n      var interest = data.data[i].Interest;\n      var degree = data.data[i].Degree;\n      var average = data.data[i].Average;\n      objects[i] = { id: i, name, major, interest, degree, average};\n    }\n  }\n  else objects[0] = {id: 0, name : \"-\", major : \"-\", interest: \"-\", degree: \"-\", average: \"-\"}\n  return objects;\n}\n\nclass SimpleTable extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n  }\n  makeTable(data) {\n\n    const rows = createData(data);\n    const { classes } = this.props;\n    return (\n      <div id=\"container\">\n      <Paper className={classes.root}>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <CustomTableCell align=\"center\">Name</CustomTableCell>\n              <CustomTableCell align=\"center\">Interest</CustomTableCell>\n              <CustomTableCell align=\"center\">Major</CustomTableCell>\n              <CustomTableCell align=\"center\">Degree</CustomTableCell>\n              <CustomTableCell align=\"center\">Average Skill Level</CustomTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map(row => (\n              <TableRow key={row.id}>\n                <TableCell align=\"center\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"center\">{row.interest}</TableCell>\n                <TableCell align=\"center\">{row.major}</TableCell>\n                <TableCell align=\"center\">{row.degree}</TableCell>\n                <TableCell align=\"center\">{row.average}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n      </div>\n    );\n  }\n\n  \n\n  render() {\n    if(this.props.data.length !== 0) {\n      return this.makeTable(this.props)}\n    else {\n      return this.makeTable(\"no\")\n    }\n    \n\n  }\n}\n\n\n\nSimpleTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleTable);","import React from \"react\"\nimport \"./graph.css\";\nimport * as d3 from 'd3';\nimport SimpleTable from \"../SimpleTable\"\n\n\nclass Graph extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.drawChart = this.drawChart.bind(this)\n    this.addPerson = this.addPerson.bind(this)\n    this.removePerson = this.removePerson.bind(this)\n\n    this.state = {\n      selectedpersons: []\n    }\n\n  }\n\n  componentDidMount() {\n    const { data } = this.props;\n    this.drawChart(data)\n  }\n  componentWillReceiveProps({ data }) {\n    this.updateChart(data)\n  }\n  // shouldComponentUpdate() {\n  //   return false;\n  // }\n\n  updateChart(dataset) {\n    var diameter = 800;\n    var nodes = d3.hierarchy(dataset)\n      .sum(function (d) { return d.Count; });\n\n      var bubble = d3.pack(dataset)\n      .size([diameter, diameter])\n      .padding(1.5);\n\n    var node = d3.selectAll(\".node\").data(bubble(nodes).descendants().filter(function (d){return !d.children})).transition().attr(\"transform\", function (d) {\n      return \"translate(\" + d.x + \",\" + d.y + \")\";\n    });\n\n    node.select(\"circle\").transition().attr(\"r\", function (d) {\n      return d.r;\n    }).duration(500);\n\n    node.select(\".nameText\").transition().attr(\"font-size\", function (d) {\n      return d.r / 3.5;\n    }).duration(500)\n\n    node.select(\".countText\").transition().text(function (d) {\n      return d.data.Count;\n    }).attr(\"font-size\", function (d) {\n      return d.r / 3;\n    }).duration(0)\n  }\n\n  addPerson(pers) {\n    this.setState({\n      selectedpersons: [...this.state.selectedpersons, pers]\n    })\n  }\n\n  removePerson(pers) {\n    const persons = this.state.selectedpersons;\n    var filteredArray = persons.filter(e => e.Name !== pers.Name)\n    this.setState({\n      selectedpersons: filteredArray\n    })\n  }\n\n  drawChart(dataset) {\n\n    const this2 = this;\n\n\n    var diameter = 800;\n\n    var bubble = d3.pack(dataset)\n      .size([diameter, diameter])\n      .padding(1.5);\n\n    var svg = d3.select(\"#chart\")\n      .append(\"svg\")\n      .attr(\"width\", diameter)\n      .attr(\"height\", diameter)\n      .call(d3.zoom().on(\"zoom\", function () {\n        svg.attr(\"transform\", d3.event.transform)\n     }))\n      .on(\"wheel.zoom\", null) \n      .append(\"g\")\n      .attr(\"class\", \"bubble\");\n\n    var nodes = d3.hierarchy(dataset)\n      .sum(function (d) { return d.Count; });\n    \n    var node = svg.selectAll(\".node\")\n      .data(bubble(nodes).descendants())\n      .enter()\n      .filter(function (d) {\n        return !d.children\n      })\n      .append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function (d) {\n        return \"translate(\" + d.x + \",\" + d.y + \")\";\n      });\n\n    node.append(\"circle\")\n      .attr(\"r\", function (d) {\n        return d.r;\n      })\n      .on(\"click\", function (d) {\n        if (d3.select(this).style('fill') !== 'orange') {\n          d3.select(this).style(\"fill\", \"orange\")\n          d3.select(this).style(\"stroke\", \"#ee7600\")\n          this2.addPerson(d.data)\n        }\n        else {\n          d3.select(this).style(\"fill\", d.data.Color)\n          d3.select(this).style(\"stroke\", \"none\")\n          this2.removePerson(d.data)\n        }\n      })\n      .style(\"fill\", function (d) {\n        return d.data.Color;\n      })\n      ;\n\n    node.append(\"text\")\n      .attr(\"dy\", \".2em\")\n      .style(\"text-anchor\", \"middle\")\n      .style(\"pointer-events\", \"none\")\n      .text(function (d) {\n        var firstname = d.data.Name.split(\" \")[0];\n        var lastname = d.data.Name.split(\" \")[1][0] + \".\";\n        var name = [firstname, lastname]\n        return name.join(\" \")\n      })\n      .attr(\"class\", \"nameText\")\n      .attr(\"font-size\", function (d) {\n        return d.r / 3.5;\n      })\n      .attr(\"fill\", \"white\");\n\n    node.append(\"text\")\n      .attr(\"dy\", \"1.3em\")\n      .attr(\"class\", \"countText\")\n      .style(\"text-anchor\", \"middle\")\n      .style(\"pointer-events\", \"none\")\n      .text(function (d) {\n        return d.data.Count;\n      })\n      .attr(\"font-size\", function (d) {\n        return d.r / 3;\n      })\n      .attr(\"fill\", \"white\");\n  }\n  render() {\n    return (\n      <div id=\"container\">\n        <div id=\"chart\"/>\n        <div id=\"colorlabels\">\n          <div className=\"inner\">\n            <div className=\"square\" id=\"outdoor\"></div>\n            <p className=\"squaretext\">Outdoor activities</p>\n          </div>\n          <div className=\"inner\">\n          <div className=\"square\" id=\"excersise\"></div>\n            <p className=\"squaretext\">Exercising</p>\n          </div>\n          <div className=\"inner\">\n          <div className=\"square\" id=\"programming\"></div>\n            <p className=\"squaretext\">Programming</p>\n          </div>\n          <div className=\"inner\">\n          <div className=\"square\" id=\"games\"></div>\n            <p className=\"squaretext\">Games</p>\n          </div>\n          <div className=\"inner\">\n          <div className=\"square\" id=\"art\"></div>\n            <p className=\"squaretext\">Art</p>\n          </div>\n          <div className=\"inner\">\n          <div className=\"square\" id=\"sports\"></div>\n            <p className=\"squaretext\">Sports</p>\n          </div>\n          <div className=\"inner\">\n          <div className=\"square\" id=\"film\"></div>\n            <p className=\"squaretext\">Film</p>\n          </div>\n          <div className=\"inner\">\n          <div className=\"square\" id=\"music\"></div>\n            <p className=\"squaretext\">Music</p>\n          </div>\n          <div className=\"inner\">\n          <div className=\"square\" id=\"visual\"></div>\n            <p className=\"squaretext\">Visual Media</p>\n          </div>\n          <div className=\"inner\">\n          <div className=\"square\" id=\"travel\"></div>\n            <p className=\"squaretext\">Travelling</p>\n          </div>\n          <div className=\"inner\">\n          <div className=\"square\" id=\"none\"></div>\n            <p className=\"squaretext\">None</p>\n          </div>\n        </div>\n        <SimpleTable data={this.state.selectedpersons} />\n      </div>\n\n    );\n  }\n}\n\nexport default Graph;","import React, { Component } from 'react';\nimport Graph from \"./components/Graph\"\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n      super(props);\n      this.handleAddClick = this.handleAddClick.bind(this);\n\n      this.state = {\n        originaldata: {},\n        data: {},\n        width: 900,\n        height: 600,\n        skill: \"gsx$howwouldyourateyourinformationvisualizationskills\"\n      }\n  }\n\n  handleAddClick(skill, element) {\n    var buttons = (document.getElementsByClassName(\"btn\"));\n\t\tfor (var j = 0; j < buttons.length; j++) { \n    \t\tbuttons[j].className = \"btn\";\n    }\n    document.getElementById(element.target.id).className = \"btn default\";\n    const data = this.state.originaldata;\n    var objects = [];\n    for (var i = 0; i < data.feed.entry.length; i++) {\n      objects[i] = {\"Name\": data.feed.entry[i].gsx$whatisyourfirstandlastname.$t, \"Count\": parseFloat(data.feed.entry[i][skill].$t),\"Major\": data.feed.entry[i].gsx$whatisyourmajor.$t, \"Interest\": data.feed.entry[i].gsx$interest.$t, \"Degree\": data.feed.entry[i].gsx$whatdegreeareyoupursuing.$t, \"Average\": data.feed.entry[i].gsx$average.$t, \"Color\": data.feed.entry[i].gsx$color.$t };\n    }\n    var dataset = {\"children\" : objects};\n    this.setState({data: dataset});\n  }\n\n  componentDidMount() {\n    const preFix = \"https://spreadsheets.google.com/feeds/list/\";\n    const sheetID = \"1qG2ZwU-Zg7GzvFW_qUi5gclqPDB5OVqEZ1pM-Jmxil8\";\n    const postFix = \"/1/public/values?alt=json\"\n\n    const spreadheetUrl = preFix + sheetID + postFix;\n    const this2 = this;\n    fetch(spreadheetUrl)\n      .then(result=>result.json())\n      .then(function(data) {\n        if (data !== undefined) {\n          this2.setState({originaldata: data});\n          var objects = [];\n          for (var i = 0; i < data.feed.entry.length; i++) {\n            objects[i] = {\"Name\": data.feed.entry[i].gsx$whatisyourfirstandlastname.$t, \"Count\": parseFloat(data.feed.entry[i][this2.state.skill].$t), \"Major\": data.feed.entry[i].gsx$whatisyourmajor.$t, \"Interest\": data.feed.entry[i].gsx$interest.$t, \"Degree\": data.feed.entry[i].gsx$whatdegreeareyoupursuing.$t, \"Average\": data.feed.entry[i].gsx$average.$t, \"Color\": data.feed.entry[i].gsx$color.$t };\n          }\n          var dataset = {\"children\" : objects};\n          this2.setState({data: dataset});\n    }\n      })\n  }\n\n  render() {\n    const { data } = this.state;\n    if(data.children !== undefined) {\n      return (\n        <div id=\"graphContainer\">\n          <div id=\"header\">\n            <h1 id=\"headertitle\">Visualizing Students</h1>\n            <h2 id=\"headerauthor\">By Oscar Wiigh</h2>\n            <p id=\"headerparagraph\">Below is a Bubble Chart that represents the skills of students enrolled in the course Information Visualization VT19 @KTH.<br/>Each bubble corresponds with a student and it's size reflects their self-estimated skill level in a certain area on a scale from 1-10.<br/>Explore different skill areas of clicking on the adjacents buttons above the chart.<br/> Pan and zoom to a desired point by double clicking. Double click and hold down shift to zoom out.<br/>The color of each bubble represents the main interest of the student.<br/>Click on a bubble to add a student to the table below and gain more information about him/her. <br/> Click on the same bubble again to remove it. </p>\n          </div>\n          <div id=\"buttoncontainer\">\n          <button className=\"btn\" id=\"math\" onClick={(e) => this.handleAddClick(\"gsx$howwouldyourateyourmathematicsskills\", e)}>Mathematics Skills</button>\n          <button className=\"btn\" id =\"code\" onClick={(e) => this.handleAddClick(\"gsx$howwouldyourateyourcoderepositoryskills\", e)}>Code Repository Skills</button>\n          <button className=\"btn\" id=\"collab\" onClick={(e) => this.handleAddClick(\"gsx$howwouldyourateyourcollaborationskills\", e)}>Collaboration Skills</button>\n          <button className=\"btn\" id=\"comm\" onClick={(e) => this.handleAddClick(\"gsx$howwouldyourateyourcommunicationskills\", e)}>Communication Skills</button>\n          <button className=\"btn\" id =\"CG\" onClick={(e) => this.handleAddClick(\"gsx$howwouldyourateyourcomputergraphicsprogrammingskills\", e)}>Computer Graphics Skills</button>\n          <button className=\"btn\" id=\"computer\" onClick={(e) => this.handleAddClick(\"gsx$howwouldyourateyourcomputerusageskills\", e)}>Computer Usage Skills</button>\n          <button className=\"btn\" id=\"artskills\" onClick={(e) => this.handleAddClick(\"gsx$howwouldyourateyourdrawingandartisticskills\", e)}>Artistic Skills</button>\n          <button className=\"btn\" id=\"HCI\" onClick={(e) => this.handleAddClick(\"gsx$howwouldyourateyourhuman-computerinteractionprogrammingskills\", e)}>HCI Skills</button>\n          <button className=\"btn default\" id=\"infoviz\" onClick={(e) => this.handleAddClick(\"gsx$howwouldyourateyourinformationvisualizationskills\", e)}>InfoViz Skills</button>\n          <button className=\"btn\" id=\"program\" onClick={(e) => this.handleAddClick(\"gsx$howwouldyourateyourprogrammingskills\", e)}>Programming Skills</button>\n          <button className=\"btn\" id =\"stat\" onClick={(e) => this.handleAddClick(\"gsx$howwouldyourateyourstatisticalskills\", e)}>Statistical Skills</button>\n          <button className=\"btn\" id=\"UX\" onClick={(e) => this.handleAddClick(\"gsx$howwouldyourateyouruserexperienceevaluationskills\", e)}>UX Evaluation Skills</button>\n          </div>\n          <Graph\n            width={this.state.width}\n            height={this.state.height}\n            data={data}\n          />\n        </div>\n    )\n    }\n    else {return <p>Loading</p>}\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}